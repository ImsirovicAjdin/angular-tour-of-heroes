/* Application-wide Styles */
h1 {
    color: #369;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 250%;
  }
  h2, h3 {
    color: #444;
    font-family: Arial, Helvetica, sans-serif;
    font-weight: lighter;
  }
  body {
    margin: 2em;
  }
  body, input[type="text"], button {
    color: #888;
    font-family: Cambria, Georgia;
  }
  /* everywhere else */
  * {
    font-family: Arial, Helvetica, sans-serif;
  }

/*

https://angular.io/tutorial/toh-pt4#add-getheroes


Add getHeroes()
Create a function to retrieve the heroes from the service.

getHeroes(): void {
  this.heroes = this.heroService.getHeroes();
}

Call it in ngOnInit

While you could call getHeroes() in the constructor, that's not the best practice.

Reserve the constructor for simple initialization such as wiring constructor parameters to properties. The constructor shouldn't do anything. It certainly shouldn't call a function that makes HTTP requests to a remote server as a real data service would.

Instead, call getHeroes() inside the ngOnInit lifecycle hook and let Angular call ngOnInit at an appropriate time after constructing a HeroesComponent instance.

ngOnInit() {
  this.getHeroes();
}

See it run
After the browser refreshes, the app should run as before, showing a list of heroes and a hero detail view when you click on a hero name.

Instead, I get:
ERROR TypeError: this.heroService.getHeroes is not a function at HeroesComponent ln21

Continue at:
https://angular.io/tutorial/toh-pt4#observable-data

*/